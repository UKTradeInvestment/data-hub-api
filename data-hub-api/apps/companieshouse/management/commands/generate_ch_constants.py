import os
import requests
import yaml
import inflection

from django.template import Context, Template
from django.core.management.base import BaseCommand, CommandError


CH_YAML_FILE = 'https://raw.githubusercontent.com/companieshouse/api-enumerations/develop/constants.yml'

constants_template = Template("""# flake8: noqa
# this file has been autogenerated from the companies house constants file
# and the django command ./manage.py generate_ch_constants.py
# do not change/update it manually as it will be overwritten

from extended_choices import Choices

{% for key, values in data.items %}
{% if values|length > 200 %}
{{ key }} = (
    {% for var, id, label in values %}('{{ id }}', '{{ label }}'),
    {% endfor %}
)
{% else %}
{{ key }} = Choices(
    {% for var, id, label in values %}('{{ var }}', '{{ id }}', '{{ label }}'),
    {% endfor %}
)
{% endif %}
{% endfor %}
""")


class Command(BaseCommand):
    help = 'Generates a python constants module from the official Companies House yaml'

    def tidyup_data(self, original_data):
        data = {}

        for key, values in original_data.items():
            sub_data = []
            for id, label in values.items():
                sub_data.append(
                    (id.upper().replace('-', '_'), id, label)
                )
            data[inflection.pluralize(key).upper()] = sub_data
        return data

    def save_to_file(self, data):
        filepath = os.path.abspath(
            os.path.join(
                os.path.dirname(os.path.abspath(__file__)),
                '..', '..', 'constants.py'
            )
        )
        # remove file if it exists
        if os.path.isfile(filepath):
            os.remove(filepath)

        with open(filepath, "w") as f:
            f.write(
                constants_template.render(Context({'data': data}))
            )

    def handle(self, *args, **options):
        response = requests.get(CH_YAML_FILE)
        if not response.ok:
            raise CommandError(response.content)

        yaml_data = yaml.load(response.content)
        yaml_data = self.tidyup_data(yaml_data)
        self.save_to_file(yaml_data)
